from snakemake.utils import min_version
min_version("8.20")

import datetime
import re
import os
import pandas as pd
from itertools import combinations, chain

configfile: "config/config.yaml"

imd_traits = config.get('imd_traits')

# Gets script path relative to location of Snakefile given by workflow.basedir
def script_path(script):
    return os.path.join(workflow.basedir, "scripts", script)

def env_path(env):
    return os.path.join(workflow.basedir, "envs", env)

def get_combined_sample_size_for_ig_meta(wildcards, isotype):
    inclusion_wildcards = [value for key, value in wildcards.items() if re.match('with_(?!mhc\\b)[\\w-]+', value)]
    datasets = [re.match('with_([\\w-]+)', x).groups()[0] for x in inclusion_wildcards]
    return sum([config.get('gwas_datasets').get('-'.join([x, isotype])).get('controls') for x in datasets])

conda: env_path("global.yaml")

include: 'rules/wildcard_constraints.smk'
include: 'rules/gwas/prune_gwas_with_1kGP_data.smk'
include: 'rules/gwas/gwas.smk'
include: 'rules/gwas/harmonise_gwas.smk'
include: 'rules/gwas/phenotype_standardisation.smk'
include: 'rules/sumher.smk'
include: 'rules/ldsc.smk'
include: 'rules/gwas/iga/iga_meta.smk'
include: 'rules/gwas/iga/existing_iga_associations.smk'
include: 'rules/gwas/igm/igm_meta.smk'
include: 'rules/gwas/igm/existing_igm_associations.smk'
include: 'rules/gwas/igg/igg_meta.smk'
include: 'rules/gwas/igg/existing_igg_associations.smk'
include: 'rules/gwas/ig_meta_sumher.smk'
include: 'rules/gwas/ig.smk'
include: 'rules/gwas/locuszoomr.smk'
include: 'rules/zscore_plots.smk'

include: 'rules/python/export.py'

module kGP_pipeline:
    snakefile: github("twillis209/1kGP_pipeline", path = "workflow/Snakefile", branch = 'conda')
    config: config['1kGP_pipeline']

use rule * from kGP_pipeline as kGP_*
